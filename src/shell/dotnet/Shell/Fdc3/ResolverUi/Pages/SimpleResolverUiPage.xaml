<!--
********************************************************************************************************
Morgan Stanley makes this available to you under the Apache License, Version 2.0 (the "License").
You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
See the NOTICE file distributed with this work for additional information regarding copyright ownership.
Unless required by applicable law or agreed to in writing, software distributed under the License
is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and limitations under the License.
********************************************************************************************************
-->
<Page x:Class="MorganStanley.ComposeUI.Shell.Fdc3.ResolverUI.Pages.SimpleResolverUIPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:MorganStanley.ComposeUI.Shell.Fdc3.ResolverUI.Pages"
      xmlns:mainNamespace="clr-namespace:MorganStanley.ComposeUI.Shell.Fdc3.ResolverUI"
      mc:Ignorable="d" 
      MinHeight="500"
      MinWidth="500"
      ShowsNavigationUI="False"
      Title="SimpleResolverUiPage">

    <Page.Resources>
        <mainNamespace:ImageSourceConverter x:Key="ImageSourceConverter"/>
        <mainNamespace:SimpleResolverUIRowVisibilityConverter x:Key="SimpleResolverUIRowVisibilityConverter"/>

        <Style TargetType="Button" x:Key="ButtonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderBrush" Value="LightSkyBlue"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="LightGray"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="Gray"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="GroupHeaderStyle" TargetType="{x:Type GroupItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                        <Expander 
                            x:Name="Expander" 
                            IsExpanded="True" 
                            Background="Transparent">
                            
                            <Expander.Header>
                                
                                <!--The Name binding does bind to the defined GroupDescription value-->
                                <TextBlock 
                                    Text="{Binding Name}" 
                                    Background="Transparent" 
                                    FontWeight="Bold"/>
                                
                            </Expander.Header>

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <ItemsPresenter Grid.Row="0"/>
                                
                                <Button 
                                    x:Name="OpenAppButton" 
                                    Click="OpenApp_Click" 
                                    Content="Open New Instance"
                                    Grid.Row="1"
                                    CommandParameter="{Binding Name}"
                                    Style="{StaticResource ButtonStyle}"
                                    Width="180"/>
                                
                            </Grid>
                        </Expander>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="DataGridRow">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Visibility" Value="{Binding Path=., Converter={StaticResource SimpleResolverUIRowVisibilityConverter}, ConverterParameter=1}"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#FF177B39"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="RowBackground" Value="Transparent"/>
            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="HorizontalAlignment" Value="Center" />
                    </Style>
                </Setter.Value>
            </Setter>

            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="FontWeight" Value="SemiBold"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <Border
        x:Name="ResolverUiBorder"
        Background="Transparent">
        
        <Grid
            Background="Transparent">
            
            <DataGrid 
                x:Name="ResolverUiDataSource"
                Background="Transparent"
                IsReadOnly="True"
                AutoGenerateColumns="False"
                GridLinesVisibility="None"
                SelectionUnit="FullRow"
                HeadersVisibility="Column"
                MouseDoubleClick="ResolverUiDataSource_MouseDoubleClick"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                MinWidth="300"
                RowStyle="{StaticResource {x:Type DataGridRow}}">

                <DataGrid.Resources>
                    <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Height" Value="20" />
                        <Setter Property="FontWeight" Value="Bold" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="SeparatorBrush" Value="Transparent" />
                    </Style>
                </DataGrid.Resources>

                <DataGrid.GroupStyle>

                    <GroupStyle ContainerStyle="{StaticResource GroupHeaderStyle}">
                        <GroupStyle.Panel>
                            <ItemsPanelTemplate>
                                <DataGridRowsPresenter/>
                            </ItemsPanelTemplate>
                        </GroupStyle.Panel>
                    </GroupStyle>

                </DataGrid.GroupStyle>

                <DataGrid.Columns>
                    <DataGridTemplateColumn MinWidth="50" HeaderStyle="{StaticResource DataGridColumnHeaderStyle}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image Source="{Binding Path=Icon, Converter={StaticResource ImageSourceConverter}}" HorizontalAlignment="Center"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTextColumn Binding="{Binding Path=AppMetadata.Name}" MinWidth="50" HeaderStyle="{StaticResource DataGridColumnHeaderStyle}"/>

                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Border>
</Page>
